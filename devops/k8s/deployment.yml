# ==========================================
# Kubernetes Deployment Configuration
# ==========================================

apiVersion: v1
kind: Namespace
metadata:
  name: careermate

---
# ==========================================
# ConfigMap
# ==========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: careermate-config
  namespace: careermate
data:
  NODE_ENV: "production"
  API_PORT: "3001"
  POSTGRES_DB: "careermate"

---
# ==========================================
# Secrets (should be created separately)
# ==========================================
# kubectl create secret generic careermate-secrets \
#   --from-literal=DATABASE_URL=postgresql://... \
#   --from-literal=REDIS_URL=redis://... \
#   --from-literal=JWT_SECRET=... \
#   --from-literal=AI_MODEL_API_KEY=... \
#   -n careermate

---
# ==========================================
# PostgreSQL StatefulSet
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: careermate
spec:
  ports:
    - port: 5432
  clusterIP: None
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: careermate
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: careermate-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi

---
# ==========================================
# Redis Deployment
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: careermate
spec:
  ports:
    - port: 6379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: careermate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
      volumes:
        - name: redis-storage
          emptyDir: {}

---
# ==========================================
# Backend Deployment
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: careermate
spec:
  type: ClusterIP
  ports:
    - port: 3001
      targetPort: 3001
  selector:
    app: backend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: careermate
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: ghcr.io/yourusername/careermate-backend:latest
          ports:
            - containerPort: 3001
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: careermate-config
                  key: NODE_ENV
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: REDIS_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: JWT_SECRET
            - name: AI_MODEL_API_KEY
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: AI_MODEL_API_KEY
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 5

---
# ==========================================
# Frontend Deployment
# ==========================================
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: careermate
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: frontend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: careermate
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/yourusername/careermate-frontend:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: careermate-secrets
                  key: NEXTAUTH_SECRET
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5

---
# ==========================================
# Horizontal Pod Autoscaler
# ==========================================
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: careermate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: careermate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
